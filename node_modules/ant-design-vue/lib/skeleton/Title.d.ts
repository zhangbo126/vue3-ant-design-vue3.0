import { ExtractPropTypes } from 'vue';
declare const skeletonTitleProps: {
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    width: import("vue-types").VueTypeDef<import("../_util/type").Key>;
};
export declare const SkeletonTitleProps: import("vue-types").VueTypeShape<{
    prefixCls: string;
    width: import("../_util/type").Key;
}>;
export declare type ISkeletonTitleProps = Partial<ExtractPropTypes<typeof skeletonTitleProps>>;
declare const Title: import("vue").DefineComponent<{
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    width: import("vue-types").VueTypeDef<import("../_util/type").Key>;
}, unknown, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    prefixCls: string;
} & {
    width?: import("../_util/type").Key;
}>, {
    prefixCls: string;
}>;
export default Title;
